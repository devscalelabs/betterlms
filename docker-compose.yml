services:
  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    container_name: better-openlms-redis
    restart: unless-stopped

    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: better-openlms-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-better_openlms}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - better-openlms-network

  # API Backend
  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    container_name: better-openlms-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-postgres}@postgres:5432/${DATABASE_NAME:-better_openlms}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      PORT: 8000
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM_ADDRESS: ${SMTP_FROM_ADDRESS}
      SMTP_FROM_NAME: ${SMTP_FROM_NAME}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./.env:/.env:ro
    networks:
      - better-openlms-network

  # Worker for background jobs
  worker:
    build:
      context: .
      dockerfile: ./apps/worker/Dockerfile
    container_name: better-openlms-worker
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DATABASE_USER:-postgres}:${DATABASE_PASSWORD:-postgres}@postgres:5432/${DATABASE_NAME:-better_openlms}
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_started
    volumes:
      - ./.env:/app/.env:ro
    networks:
      - better-openlms-network

  # Admin Frontend
  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
    container_name: better-openlms-admin
    restart: unless-stopped
    ports:
      - "${ADMIN_PORT:-4000}:4000"
    depends_on:
      - api
    networks:
      - better-openlms-network

  # Platform Frontend
  platform:
    build:
      context: .
      dockerfile: ./apps/platform/Dockerfile
    container_name: better-openlms-platform
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - better-openlms-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  better-openlms-network:
    driver: bridge
